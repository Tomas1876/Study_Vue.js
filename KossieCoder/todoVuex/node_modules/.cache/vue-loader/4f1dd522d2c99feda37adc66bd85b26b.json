{"remainingRequest":"C:\\web\\Vuejs\\todoVuex\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\web\\Vuejs\\todoVuex\\src\\components\\CompletedTodo.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\web\\Vuejs\\todoVuex\\src\\components\\CompletedTodo.vue","mtime":1621745791784},{"path":"C:\\web\\Vuejs\\todoVuex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\web\\Vuejs\\todoVuex\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\web\\Vuejs\\todoVuex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\web\\Vuejs\\todoVuex\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgY29tcHV0ZWQ6ew0KICAgICAgIG51bWJlck9mQ29tcGxldGVkVG9kbygpew0KICAgICAgICAgICAvL2ZpbHRlcuuKlCDsm5Drs7jrsLDsl7TsnYQg7Zu87IaQ7ZWY7KeAIOyViuqzoCDsg4gg67Cw7Je07J2EIOuwmO2ZmO2VmOuKlCDtlajsiJjsnbTrr4DroZwNCiAgICAgICAgICAgLy9maWx0ZXLrpbwg7J207Jqp7ZW0IOyytO2BrOuQnCDtla3rqqnrk6TroZzrp4wg7J2066Oo7Ja07KeEIOuwsOyXtOydhCDrp4zrk6Ag65KkIOq3uCDquLjsnbTrpbwg67CY7ZmYDQogICAgICAgICAgIHJldHVybiB0aGlzLnRvZG9zLmZpbHRlcih0b2RvID0+IHRvZG8uY2hlY2tlZCkubGVuZ3RoOw0KICAgICAgIH0NCg0KICAgICAgIC8vc3Ryb2XsnZggaW5kZXguanPsnZggc3RhdGXsl5Ag7J6I64qUIHRvZG9z66W8IOqwgOyguOyYrCDqsoMNCiAgICAgICAvL3N0YXRlIOyViOydmCDrjbDsnbTthLDrpbwg6rCA7KC47JisIOuVjOuKlCBjb21wdXRlZOyXkCDsnpHshLHtlZzri6QNCiAgICB9DQp9DQo="},{"version":3,"sources":["CompletedTodo.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"CompletedTodo.vue","sourceRoot":"src/components","sourcesContent":["\r\n<!-- 완료된 todo의 개수를 보여주는 컴포넌트-->\r\n\r\n<template>\r\n  <div>\r\n\r\n      Completed Todo : {{numberOfCompletedTodo}}\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    computed:{\r\n       numberOfCompletedTodo(){\r\n           //filter는 원본배열을 훼손하지 않고 새 배열을 반환하는 함수이므로\r\n           //filter를 이용해 체크된 항목들로만 이루어진 배열을 만든 뒤 그 길이를 반환\r\n           return this.todos.filter(todo => todo.checked).length;\r\n       }\r\n\r\n       //stroe의 index.js의 state에 있는 todos를 가져올 것\r\n       //state 안의 데이터를 가져올 때는 computed에 작성한다\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]}]}